<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>ProductionDatabaseIP</name>
          <description></description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ProductionDatabaseUsername</name>
          <description></description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ProductionDatabaseName</name>
          <description></description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ProductionDatabasePassword</name>
          <description></description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SESUsername</name>
          <description></description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SESPassword</name>
          <description></description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SESMailer</name>
          <description></description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DevelopmentDomain</name>
          <description></description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ProductionDomain</name>
          <description></description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>S3Bucket</name>
          <description></description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ProductionAutoscalingGroupMinSize</name>
          <description>The default is 2</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ProductionAutoscalingGroupMaxSize</name>
          <description>The default is 2</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DevelopmentAutoscalingGroupMinSize</name>
          <description>The Default is 1</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DevelopmentAutoscalingGroupMaxSize</name>
          <description>The Default is 1</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>Language</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string></string>
              <string>rails</string>
              <string>java</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>InstanceType</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string></string>
              <string>t1.micro</string>
              <string>m1.small</string>
              <string>m1.medium</string>
              <string>m1.large</string>
              <string>m1.xlarge</string>
              <string>m2.xlarge</string>
              <string>m2.2xlarge</string>
              <string>m2.4xlarge</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ProductionLoadbalancerName</name>
          <description></description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name></name>
        <refspec></refspec>
        <url>git@github.com:stelligent/havoc_platform.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <clean>false</clean>
    <wipeOutWorkspace>false</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <useShallowClone>false</useShallowClone>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir></relativeTargetDir>
    <reference></reference>
    <excludedRegions></excludedRegions>
    <excludedUsers></excludedUsers>
    <gitConfigName></gitConfigName>
    <gitConfigEmail></gitConfigEmail>
    <skipTag>false</skipTag>
    <includedRegions></includedRegions>
    <scmName></scmName>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers class="vector"/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>if [ -n &quot;${DevelopmentDomain}&quot; ]
then
ruby ${WORKSPACE}/lib/set_properties.rb --sdbdomain ${SIMPLEDB_STACK} \
                                        --property DevelopmentDomain \
                                        --value ${DevelopmentDomain} \
                                        --itemname properties
else
echo &quot;staying the same&quot;
fi

if [ -n &quot;${ProductionDatabaseIP}&quot; ]
then
ruby ${WORKSPACE}/lib/set_properties.rb --sdbdomain ${SIMPLEDB_STACK} \
                                        --property ProductionDatabaseIP \
                                        --value ${ProductionDatabaseIP} \
                                        --itemname properties
else
echo &quot;staying the same&quot;
fi


if [ -n &quot;${ProductionDatabaseUsername}&quot; ]
then
ruby ${WORKSPACE}/lib/set_properties.rb --sdbdomain ${SIMPLEDB_STACK} \
                                        --property ProductionDatabaseUsername \
                                        --value ${ProductionDatabaseUsername} \
                                        --itemname properties
else
echo &quot;staying the same&quot;
fi



if [ -n &quot;${ProductionDatabaseName}&quot; ]
then
ruby ${WORKSPACE}/lib/set_properties.rb --sdbdomain ${SIMPLEDB_STACK} \
                                        --property ProductionDatabaseName \
                                        --value ${ProductionDatabaseName} \
                                        --itemname properties
else
echo &quot;staying the same&quot;
fi



if [ -n &quot;${ProductionDatabasePassword}&quot; ]
then
ruby ${WORKSPACE}/lib/set_properties.rb --sdbdomain ${SIMPLEDB_STACK} \
                                        --property ProductionDatabasePassword \
                                        --value ${ProductionDatabasePassword} \
                                        --itemname properties
else
echo &quot;staying the same&quot;
fi

if [ -n &quot;${DevelopmentStripeSecretKey}&quot; ]
then
ruby ${WORKSPACE}/lib/set_properties.rb --sdbdomain ${SIMPLEDB_STACK} \
                                        --property DevelopmentStripeSecretKey \
                                        --value ${DevelopmentStripeSecretKey} \
                                        --itemname properties
else
echo &quot;staying the same&quot;
fi

if [ -n &quot;${DevelopmentStripePublicKey}&quot; ]
then
ruby ${WORKSPACE}/lib/set_properties.rb --sdbdomain ${SIMPLEDB_STACK} \
                                        --property DevelopmentStripePublicKey \
                                        --value ${DevelopmentStripePublicKey} \
                                        --itemname properties
else
echo &quot;staying the same&quot;
fi

if [ -n &quot;${ProductionStripePublicKey}&quot; ]
then
ruby ${WORKSPACE}/lib/set_properties.rb --sdbdomain ${SIMPLEDB_STACK} \
                                        --property ProductionStripePublicKey \
                                        --value ${ProductionStripePublicKey} \
                                        --itemname properties
else
echo &quot;staying the same&quot;
fi

if [ -n &quot;${ProductionStripeSecretKey}&quot; ]
then
ruby ${WORKSPACE}/lib/set_properties.rb --sdbdomain ${SIMPLEDB_STACK} \
                                        --property ProductionStripeSecretKey \
                                        --value ${ProductionStripeSecretKey} \
                                        --itemname properties
else
echo &quot;staying the same&quot;
fi

if [ -n &quot;${LogglyUrl}&quot; ]
then
ruby ${WORKSPACE}/lib/set_properties.rb --sdbdomain ${SIMPLEDB_STACK} \
                                        --property LogglyUrl \
                                        --value ${LogglyUrl} \
                                        --itemname properties
else
echo &quot;staying the same&quot;
fi

if [ -n &quot;${SESUsername}&quot; ]
then
ruby ${WORKSPACE}/lib/set_properties.rb --sdbdomain ${SIMPLEDB_STACK} \
                                        --property SESUsername \
                                        --value ${SESUsername} \
                                        --itemname properties
else
echo &quot;staying the same&quot;
fi

if [ -n &quot;${SESPassword}&quot; ]
then
ruby ${WORKSPACE}/lib/set_properties.rb --sdbdomain ${SIMPLEDB_STACK} \
                                        --property SESPassword \
                                        --value ${SESPassword} \
                                        --itemname properties
else
echo &quot;staying the same&quot;
fi


if [ -n &quot;${SESMailer}&quot; ]
then
ruby ${WORKSPACE}/lib/set_properties.rb --sdbdomain ${SIMPLEDB_STACK} \
                                        --property SESMailer \
                                        --value ${SESMailer} \
                                        --itemname properties
else
echo &quot;staying the same&quot;
fi

if [ -n &quot;${ProductionRedisDomain}&quot; ]
then
ruby ${WORKSPACE}/lib/set_properties.rb --sdbdomain ${SIMPLEDB_STACK} \
                                        --property ProductionRedisDomain \
                                        --value ${ProductionRedisDomain} \
                                        --itemname properties
else
echo &quot;staying the same&quot;
fi

if [ -n &quot;${ProductionDomain}&quot; ]
then
ruby ${WORKSPACE}/lib/set_properties.rb --sdbdomain ${SIMPLEDB_STACK} \
                                        --property ProductionDomain \
                                        --value ${ProductionDomain} \
                                        --itemname properties
else
echo &quot;staying the same&quot;
fi

if [ -n &quot;${SSLCertificateArn}&quot; ]
then
ruby ${WORKSPACE}/lib/set_properties.rb --sdbdomain ${SIMPLEDB_STACK} \
                                        --property SSLCertificateArn \
                                        --value ${SSLCertificateArn} \
                                        --itemname properties
else
echo &quot;staying the same&quot;
fi

if [ -n &quot;${S3Bucket}&quot; ]
then
ruby ${WORKSPACE}/lib/set_properties.rb --sdbdomain ${SIMPLEDB_STACK} \
                                        --property S3Bucket \
                                        --value ${S3Bucket} \
                                        --itemname properties
else
echo &quot;staying the same&quot;
fi

if [ -n &quot;${ProductionAutoscalingGroupMinSize}&quot; ]
then
ruby ${WORKSPACE}/lib/set_properties.rb --sdbdomain ${SIMPLEDB_STACK} \
                                        --property ProductionAutoscalingGroupMinSize \
                                        --value ${ProductionAutoscalingGroupMinSize} \
                                        --itemname properties
else
echo &quot;staying the same&quot;
fi

if [ -n &quot;${ProductionAutoscalingGroupMaxSize}&quot; ]
then
ruby ${WORKSPACE}/lib/set_properties.rb --sdbdomain ${SIMPLEDB_STACK} \
                                        --property ProductionAutoscalingGroupMaxSize \
                                        --value ${ProductionAutoscalingGroupMaxSize} \
                                        --itemname properties
else
echo &quot;staying the same&quot;
fi

if [ -n &quot;${DevelopmentAutoscalingGroupMinSize}&quot; ]
then
ruby ${WORKSPACE}/lib/set_properties.rb --sdbdomain ${SIMPLEDB_STACK} \
                                        --property DevelopmentAutoscalingGroupMinSize \
                                        --value ${DevelopmentAutoscalingGroupMinSize} \
                                        --itemname properties
else
echo &quot;staying the same&quot;
fi

if [ -n &quot;${DevelopmentAutoscalingGroupMaxSize}&quot; ]
then
ruby ${WORKSPACE}/lib/set_properties.rb --sdbdomain ${SIMPLEDB_STACK} \
                                        --property DevelopmentAutoscalingGroupMaxSize \
                                        --value ${DevelopmentAutoscalingGroupMaxSize} \
                                        --itemname properties
else
echo &quot;staying the same&quot;
fi

if [ -n &quot;${Language}&quot; ]
then
ruby ${WORKSPACE}/lib/set_properties.rb --sdbdomain ${SIMPLEDB_STACK} \
                                        --property Language \
                                        --value ${Language} \
                                        --itemname properties
else
echo &quot;staying the same&quot;
fi

if [ -n &quot;${InstanceType}&quot; ]
then
ruby ${WORKSPACE}/lib/set_properties.rb --sdbdomain ${SIMPLEDB_STACK} \
                                        --property InstanceType \
                                        --value ${InstanceType} \
                                        --itemname properties
else
echo &quot;staying the same&quot;
fi

if [ -n &quot;${EncryptionKey}&quot; ]
then
ruby ${WORKSPACE}/lib/set_properties.rb --sdbdomain ${SIMPLEDB_STACK} \
                                        --property EncryptionKey \
                                        --value ${EncryptionKey} \
                                        --itemname properties
else
echo &quot;staying the same&quot;
fi

if [ -n &quot;${NewRelicKey}&quot; ]
then
ruby ${WORKSPACE}/lib/set_properties.rb --sdbdomain ${SIMPLEDB_STACK} \
                                        --property NewRelicKey \
                                        --value ${NewRelicKey} \
                                        --itemname properties
else
echo &quot;staying the same&quot;
fi

if [ -n &quot;${IntercomAppId}&quot; ]
then
ruby ${WORKSPACE}/lib/set_properties.rb --sdbdomain ${SIMPLEDB_STACK} \
                                        --property IntercomAppId \
                                        --value ${IntercomAppId} \
                                        --itemname properties
else
echo &quot;staying the same&quot;
fi

if [ -n &quot;${IntercomApiSecret}&quot; ]
then
ruby ${WORKSPACE}/lib/set_properties.rb --sdbdomain ${SIMPLEDB_STACK} \
                                        --property IntercomApiSecret \
                                        --value ${IntercomApiSecret} \
                                        --itemname properties
else
echo &quot;staying the same&quot;
fi

if [ -n &quot;${IntercomApiKey}&quot; ]
then
ruby ${WORKSPACE}/lib/set_properties.rb --sdbdomain ${SIMPLEDB_STACK} \
                                        --property IntercomApiKey \
                                        --value ${IntercomApiKey} \
                                        --itemname properties
else
echo &quot;staying the same&quot;
fi

if [ -n &quot;${ProductionLoadbalancerName}&quot; ]
then
ruby ${WORKSPACE}/lib/set_properties.rb --sdbdomain ${SIMPLEDB_STACK} \
                                        --property ProductionLoadbalancerName \
                                        --value ${ProductionLoadbalancerName} \
                                        --itemname properties
else
echo &quot;staying the same&quot;
fi</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.BuildTrigger>
      <childProjects>InfrastructureBuild</childProjects>
      <threshold>
        <name>SUCCESS</name>
        <ordinal>0</ordinal>
        <color>BLUE</color>
      </threshold>
    </hudson.tasks.BuildTrigger>
  </publishers>
  <buildWrappers/>
</project>
